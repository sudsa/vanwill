<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	 <parent>
        <groupId>com.qifeng.will</groupId>
        <artifactId>vanwill-qf</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>


	<groupId>com.qifeng.will</groupId>
	<artifactId>vanwill-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>vanwill-server</name>
	<description>旗风vanwill-server</description>



	<dependencies>
		<!--<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-dependencies</artifactId>
			<version>${version.spring-cloud}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>-->


		<dependency>
			<groupId>com.qifeng.will</groupId>
			<artifactId>vanwill-handle</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!--<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<version>1.4.0</version>
		</dependency>-->


		<!-- nacos 配置中心-->
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>
		<!-- nacos 注册-->
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>


		<!--<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-engine-core</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-generator</artifactId>
			<version>3.1.0</version>
		</dependency>-->

		

		<!-- spring cloud 默认配置启动器 -->
		<!--<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>-->
		<!-- spring cloud Eureka Server 启动器 -->
		<!--<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>-->






		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>${spring-boot-admin.version}</version>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-server</artifactId>
			<version>${spring-boot-admin.version}</version>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-dependencies</artifactId>
				<version>${spring-boot-admin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- 代码自动生成执行 -->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.1</version>
				<configuration>
					<verbose>true</verbose>
					<overwrite>true</overwrite>
				</configuration>
				<executions>
					<execution>
						<id>Generate MyBatis Artifacts</id>
						<!-- 避免install 和 package 时执行mybatis-generator-maven-plugin插件-->
						<phase>deploy</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--<plugin>
				<groupId>io.github.swagger2markup</groupId>
				<artifactId>swagger2markup-maven-plugin</artifactId>
				<version>1.3.3</version>
				<configuration>
					&lt;!&ndash;swagger页面可以看到&ndash;&gt;
					<swaggerInput>http://localhost:8010/v2/api-docs</swaggerInput>
					&lt;!&ndash;生成多个文件&ndash;&gt;
					&lt;!&ndash;<outputDir>./docs/asciidoc/generated/all</outputDir>&ndash;&gt;
					&lt;!&ndash;生成单个文件&ndash;&gt;
					<outputFile>${basedir}/docs/devicehelper-api</outputFile>
					<config>
						&lt;!&ndash; 除了ASCIIDOC之外，还有MARKDOWN和CONFLUENCE_MARKUP可选 &ndash;&gt;
						<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
					</config>
				</configuration>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>convertSwagger2markup</goal>
						</goals>
					</execution>
				</executions>
			</plugin>-->

		</plugins>
	</build>

</project>
